#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# String Builder Class

The String Builder class is a class that allows you to build a string by appending characters to it. It is useful when you want to build a string from a loop or a function.

#!csharp

var sb = new StringBuilder();
sb.AppendLine("Hello");
sb.Append("World");
sb.Append("!");
sb.AppendFormat("The number is {0}", 42);

string text = sb.ToString();
Console.WriteLine(text);

#!markdown

Here's another example.

#!csharp

string[] names = { "John", "Paul", "George", "Ringo" };

var sb = new StringBuilder();
foreach (string name in names)
{
    sb.Append(name);
    sb.Append(" ");
}
sb.AppendLine();
sb.Append("Are friends");

string text = sb.ToString();
Console.WriteLine(text);
