#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# Array

An array is a fixed size collection of values. The values can be of any type, and the array can be multidimensional.

#!csharp

// Method 1
int[] arr1 = new int[5];

// Method 2
int[] arr2 = {1, 2, 3, 4, 5};

// Method 3
int[] arr3 = new int[]{1, 2, 3, 4, 5};

// Method 4
int[] arr4 = new int[5]{1, 2, 3, 4, 5};

// Method 5
var arr5 = new int[5];

#!markdown

## Displaying array elements

Array elements can be displayed in different ways.

#!markdown

### Using For Loop

#!csharp

int[] numbers = { 1, 2, 3, 4, 5 };

for(int i = 0; i < numbers.Length; i++)
{
    Console.WriteLine(numbers[i]);
}

#!markdown

### Using Foreach Loop

#!csharp

int[] data = { 1, 2, 3, 4, 5 };

foreach(var item in data)
{
    Console.WriteLine(item);
}

#!markdown

### Using String.join()

#!csharp

int[] data = { 1, 2, 3, 4, 5 };

// string elements = String.Join(",", data);
Console.WriteLine(String.Join(",", data));
